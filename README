
include_uri [opt] uri

参数
    uri - 配置地址(支持变量，可通过 -n 关闭)
        http    -> http://abc.com:81/xxx
        http    -> //abc.com/xx
        file    -> ./abc/x.conf
        file    -> file://abc/x.conf
        file    -> file://$conf_prefix/abc/x.conf
        file    -> file:///abc/x.conf
        file    -> /abc/x.conf
        lua     -> lua:/abc.lua
        lua     -> lua:abc.lua
        luai    -> luai: return "listen 12;"

选项
    -n 不对 uri 做变量插值
    -o $file.abc.conf (支持变量)
        本地文件名，默认 "$file.l$line.conf" (对 file 无效)
    -O <xx> (支持变量)
        -o 的扩展，会把值放到 "$file.<xx>.l$line.conf"
    -I <xx> - (使用 I 仅仅因为它在 O 左边) (支持变量)
        -o 的扩展，会把值放到 "$file.<xx>.conf" (有时候，行号会变化)
    -t (timeout) 4s - uri 执行超时(仅 http 有效)
        0  - 死等 (受系统超时影响)
        >0 - 超时
    -c (pre-usecache) 5s - 如果缓存文件存在，是否直接使用 (-c 和 -C 对 file: 无效)
        -1 - 不直接使用
        0  - 只要缓存文件存在就使用
        >0 - 根据 mtime 判断
    -C (fail-usecache) 5m - 如果生成配置失败(如http)，是否使用缓存文件
        -1 - 不使用，保留缓存文件
        -2 - 不使用，删除缓存文件
        0  - 只要缓存文件存在就使用
        >0 - 根据 mtime 判断

示例:
    include_uri -I main -t 3s -c 5m -C 3d '//config-server/web1.conf?host=$hostname';

变量插值语法
    $abc - [a-zA-Z][a-zA-Z0-9_]
    ${ab} - 如果需要变量名后接 类变量名字符 如 "${ab}c"

可用变量
    $file   - 当前配置文件
    $line   - 当前行(指令结束行，受 nginx 所限)
    $prefix - nginx 运行 prefix(nginx 启动时候 -p 设定目录) ('/' 结尾)
    $conf_prefix    - 配置 prefix ('/' 结尾)
    $pid    - 当前 nginx master pid
    $time   - 当前时间戳
    $hostname       - 当前机器hostname

变量其他
    如果想插入 $ 可用 $$
    如果 $ 后面字符不匹配 [a-zA-Z{$] 那么 $ 及这个字符会被原样使用 "$/a" -> "$/a"
    如果变量名对应的值不存在，会插入空 "a${xx}b" -> "ab" 如果 xx 不存在



TODO
    * 变量内容的各种转义支持，如 uri 转义，路径转义(比如我想把缓存文件放到统一个目录下，这样文件名最好把 / 变成 _)
        预想语法 "abc.com/?a=${=$abc|u}" 会对 ${= 和 |u} 之间的字符串做 变量插值后 再 转义，转义由 | } 之间的字符决定
        不支持嵌套转义，预计有:
        u -> uri 转义
        p -> 路径中 / 到 _ 的转义

